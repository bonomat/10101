name: CI

on:
  pull_request:
  push:
    branches:
      - "staging"
      - "main"

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dprint/check@v2.1

  lint-commits:
    runs-on: ubuntu-latest
    if: github.event.ref != 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get all commits on current main
        run: git fetch origin main
      - name: Log all commits we will analyze
        run: git log --pretty=format:%s origin/main..HEAD
      - name: Disallow fixup! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv fixup!
      - name: Disallow squash! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv squash!

  #  clippy:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v3
  #      - uses: extractions/setup-just@v1
  #      - name: Setup rust toolchain
  #        run: rustup show
  #      - uses: Swatinem/rust-cache@v2.2.0
  #      - uses: subosito/flutter-action@v2
  #        with:
  #          channel: "stable"
  #      - name: Install FFI bindings
  #        run: cargo install flutter_rust_bridge_codegen
  #      - name: Generate FFI bindings
  #        run: just gen
  #      - run: cargo clippy --all-targets -- -D warnings

  nigiri:
    runs-on: ubuntu-latest
    steps:
      - - uses: actions/checkout@v3
      - name: Start containers
        run: |
          docker-compose up -d
          sleep 20

      - name: Test containers
        run: |
          curl -d '{"address":"bcrt1qylgu6ffkp3p0m8tw8kp4tt2dmdh755f4r5dq7s", "amount":"0.1"}' -H "Content-Type: application/json" -X POST http://localhost:3000/faucet
